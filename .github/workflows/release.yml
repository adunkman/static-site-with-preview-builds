name: Release

on:
  push:
    branches: [main]

env:
  HUGO_ENV: production
  DOMAIN_NAME: static-site-with-preview-builds.dunkman.me
  AWS_DEFAULT_REGION: us-east-1

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: main
      url: ${{ steps.deploy.outputs.environment_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: terraform/.terraform
          key: v1-${{ hashFiles('terraform/.terraform.lock.hcl', 'terraform/main.tf') }}

      - name: Build site
        run: make build

      - name: Scan infrastructure files for security issues
        run: make tfsec

      - name: Initialize terraform
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: make terraform-init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: Plan infrastructure changes
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: make terraform-plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: Apply infrastructure changes
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: make terraform-apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: Deploy main site
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: make deploy-main
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: Set environment URL
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        id: deploy
        run: echo "::set-output name=environment_url::https://${{ env.DOMAIN_NAME }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
